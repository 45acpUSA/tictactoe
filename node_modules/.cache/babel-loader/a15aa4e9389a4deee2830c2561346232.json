{"ast":null,"code":"import _slicedToArray from \"/Users/Matt/Desktop/Bravo19/React/tic-tac-toe2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Matt/Desktop/Bravo19/React/tic-tac-toe2/src/Box.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass Box extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      const _this$props = this.props,\n            value = _this$props.value,\n            user = _this$props.user,\n            handleUser = _this$props.handleUser,\n            index = _this$props.index;\n      handleUser(); // if (value !== \"X\" && value !== \"O\"){\n      // }\n\n      this.setState({\n        value: user\n      });\n      this.checkWinner();\n      console.log(value);\n    };\n\n    this.checkWinner = () => {\n      const _this$props2 = this.props,\n            value = _this$props2.value,\n            index = _this$props2.index,\n            board = _this$props2.board;\n      const wins = [[0, 1, 2], [0, 3, 6], [0, 4, 8], [1, 4, 7], [2, 5, 8], [3, 4, 5], [6, 7, 8], [2, 4, 6]];\n\n      for (let i = 0; i < wins.length; i++) {\n        const _wins$i = _slicedToArray(wins[i], 3),\n              a = _wins$i[0],\n              b = _wins$i[1],\n              c = _wins$i[2];\n\n        if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n          alert(\"\".concat(value, \" is the winner!\"));\n        }\n      }\n    };\n\n    this.state = {\n      value: this.props.value,\n      index: this.props.index\n    };\n  }\n\n  // checkWinner = () => {\n  //   const { value, index } = this.props\n  //   if ()\n  // }\n  // const { value, index } = this.state\n  // const { gameBoard } = this.props\n  // if (gameBoard[0] === gameBoard[1] && gameBoard[1] === gameBoard[2]){\n  //   alert(`${value} is the winner!`)\n  // } else if (gameBoard[0] === gameBoard[3] && gameBoard[3] === gameBoard[6]) {\n  //   alert(`${value} is the winner!`)\n  // } else if (gameBoard[0] === gameBoard[4] && gameBoard[4] === gameBoard[8]) {\n  //   alert(`${value} is the winner!`)\n  // }\n  render() {\n    const value = this.state.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"mainBox\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, value));\n  }\n\n}\n\nexport default Box;","map":{"version":3,"sources":["/Users/Matt/Desktop/Bravo19/React/tic-tac-toe2/src/Box.js"],"names":["React","Component","Box","constructor","props","handleClick","value","user","handleUser","index","setState","checkWinner","console","log","board","wins","i","length","a","b","c","alert","state","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAQlBC,WARkB,GAQJ,MAAM;AAAA,0BACyB,KAAKD,KAD9B;AAAA,YACVE,KADU,eACVA,KADU;AAAA,YACHC,IADG,eACHA,IADG;AAAA,YACGC,UADH,eACGA,UADH;AAAA,YACeC,KADf,eACeA,KADf;AAElBD,MAAAA,UAAU,GAFQ,CAGlB;AACA;;AACA,WAAKE,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAEC;AAAR,OAAd;AACA,WAAKI,WAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACD,KAhBiB;;AAAA,SAmBlBK,WAnBkB,GAmBJ,MAAM;AAAA,2BACc,KAAKP,KADnB;AAAA,YACVE,KADU,gBACVA,KADU;AAAA,YACHG,KADG,gBACHA,KADG;AAAA,YACIK,KADJ,gBACIA,KADJ;AAElB,YAAMC,IAAI,GAAG,CACX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADW,EAEX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFW,EAGX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHW,EAIX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJW,EAKX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALW,EAMX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANW,EAOX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPW,EAQX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARW,CAAb;;AAUA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACD,IAAI,CAACE,MAArB,EAA6BD,CAAC,EAA9B,EAAiC;AAAA,uCACbD,IAAI,CAACC,CAAD,CADS;AAAA,cACxBE,CADwB;AAAA,cACrBC,CADqB;AAAA,cAClBC,CADkB;;AAE/B,YAAIN,KAAK,CAACI,CAAD,CAAL,IAAYJ,KAAK,CAACI,CAAD,CAAL,KAAaJ,KAAK,CAACK,CAAD,CAA9B,IAAqCL,KAAK,CAACI,CAAD,CAAL,KAAaJ,KAAK,CAACM,CAAD,CAA3D,EAA+D;AAC7DC,UAAAA,KAAK,WAAIf,KAAJ,qBAAL;AACD;AACF;AACF,KArCiB;;AAEhB,SAAKgB,KAAL,GAAa;AACXhB,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KADP;AAEXG,MAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWK;AAFP,KAAb;AAID;;AAiCD;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAc,EAAAA,MAAM,GAAE;AAAA,UACEjB,KADF,GACY,KAAKgB,KADjB,CACEhB,KADF;AAEN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,OAAO,EAAE,KAAKD,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,KADH,CADF,CADF;AAOD;;AAjEyB;;AAoE5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass Box extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      value: this.props.value,\n      index: this.props.index,\n    }\n  }\n\n  handleClick = () => {\n    const { value, user, handleUser, index } = this.props\n    handleUser()\n    // if (value !== \"X\" && value !== \"O\"){\n    // }\n    this.setState({value: user})\n    this.checkWinner()\n    console.log(value)\n  }\n\n\n  checkWinner = () => {\n    const { value, index, board } = this.props\n    const wins = [\n      [0, 1, 2],\n      [0, 3, 6],\n      [0, 4, 8],\n      [1, 4, 7],\n      [2, 5, 8],\n      [3, 4, 5],\n      [6, 7, 8],\n      [2, 4, 6]\n    ]\n    for (let i=0; i<wins.length; i++){\n      const [a, b, c] = wins[i]\n      if (board[a] && board[a] === board[b] && board[a] === board[c]){\n        alert(`${value} is the winner!`)\n      }\n    }\n  }\n\n  // checkWinner = () => {\n  //   const { value, index } = this.props\n  //   if ()\n  // }\n\n\n  // const { value, index } = this.state\n  // const { gameBoard } = this.props\n  // if (gameBoard[0] === gameBoard[1] && gameBoard[1] === gameBoard[2]){\n  //   alert(`${value} is the winner!`)\n  // } else if (gameBoard[0] === gameBoard[3] && gameBoard[3] === gameBoard[6]) {\n  //   alert(`${value} is the winner!`)\n  // } else if (gameBoard[0] === gameBoard[4] && gameBoard[4] === gameBoard[8]) {\n  //   alert(`${value} is the winner!`)\n  // }\n\n  render(){\n    const { value } = this.state\n    return (\n      <div>\n        <div id=\"mainBox\" onClick={this.handleClick}>\n          {value}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Box;\n"]},"metadata":{},"sourceType":"module"}