{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Desktop/Bravo19/React/tic-tac-toe2/src/User.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Box from './Box.js';\n\nclass User extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUser = () => {\n      const user = this.state.user;\n      this.setState({\n        user: user === \"X\" ? \"O\" : \"X\"\n      });\n    };\n\n    this.state = {\n      board: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      user: \"X\"\n    };\n  }\n\n  // handleWin = () => {\n  //   const wins = [\n  //     [0, 1, 2],\n  //     [0, 3, 6],\n  //     [0, 4, 8],\n  //     [1, 4, 7],\n  //     [2, 5, 8],\n  //     [3, 4, 5],\n  //     [6, 7, 8],\n  //     [2, 4, 6]\n  //   ]\n  //   return wins.map(win=>{\n  //     const [a, b, c] = win\n  //     if (index === a && index === b && index === c && value === \"X\"){\n  //       return index\n  //     }\n  //   })\n  // }\n  render() {\n    const _this$state = this.state,\n          board = _this$state.board,\n          user = _this$state.user;\n    const gameBoard = board.map((value, index) => {\n      return React.createElement(Box, {\n        value: value,\n        index: index,\n        user: user,\n        handleUser: this.handleUser,\n        gameBoard: this.gameBoard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"gameBoard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, gameBoard));\n  }\n\n}\n\nexport default User;","map":{"version":3,"sources":["/Users/Matt/Desktop/Bravo19/React/tic-tac-toe2/src/User.js"],"names":["React","Component","Box","User","constructor","props","handleUser","user","state","setState","board","render","gameBoard","map","value","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,UAAhB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAC3BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAQlBC,UARkB,GAQL,MAAM;AAAA,YACTC,IADS,GACA,KAAKC,KADL,CACTD,IADS;AAEjB,WAAKE,QAAL,CAAc;AAACF,QAAAA,IAAI,EAAEA,IAAI,KAAK,GAAT,GAAe,GAAf,GAAqB;AAA5B,OAAd;AACD,KAXiB;;AAEhB,SAAKC,KAAL,GAAa;AACTE,MAAAA,KAAK,EAAE,CAAC,EAAD,EAAK,EAAL,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC,CADE;AAETH,MAAAA,IAAI,EAAE;AAFG,KAAb;AAID;;AAOD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIAI,EAAAA,MAAM,GAAE;AAAA,wBACkB,KAAKH,KADvB;AAAA,UACEE,KADF,eACEA,KADF;AAAA,UACSH,IADT,eACSA,IADT;AAEN,UAAMK,SAAS,GAAGF,KAAK,CAACG,GAAN,CAAU,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC5C,aACE,oBAAC,GAAD;AACE,QAAA,KAAK,EAAED,KADT;AAEE,QAAA,KAAK,EAAEC,KAFT;AAGE,QAAA,IAAI,EAAER,IAHR;AAIE,QAAA,UAAU,EAAE,KAAKD,UAJnB;AAKE,QAAA,SAAS,EAAE,KAAKM,SALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD,KAViB,CAAlB;AAWA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,SADH,CADF,CADF;AAOD;;AAvD0B;;AA0D7B,eAAeT,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Box from './Box.js'\n\nclass User extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n        board: [\"\", \"\",\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n        user: \"X\"\n      }\n  }\n\n  handleUser = () => {\n    const { user } = this.state\n    this.setState({user: user === \"X\" ? \"O\" : \"X\"})\n  }\n\n  // handleWin = () => {\n  //   const wins = [\n  //     [0, 1, 2],\n  //     [0, 3, 6],\n  //     [0, 4, 8],\n  //     [1, 4, 7],\n  //     [2, 5, 8],\n  //     [3, 4, 5],\n  //     [6, 7, 8],\n  //     [2, 4, 6]\n  //   ]\n  //   return wins.map(win=>{\n  //     const [a, b, c] = win\n  //     if (index === a && index === b && index === c && value === \"X\"){\n  //       return index\n  //     }\n  //   })\n  // }\n\n\n\n  render(){\n    const { board, user } = this.state\n    const gameBoard = board.map((value, index) => {\n      return (\n        <Box\n          value={value}\n          index={index}\n          user={user}\n          handleUser={this.handleUser}\n          gameBoard={this.gameBoard}\n        />\n      )\n    })\n    return (\n      <div>\n        <div id=\"gameBoard\">\n          {gameBoard}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}