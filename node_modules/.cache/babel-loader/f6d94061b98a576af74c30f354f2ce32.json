{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Desktop/Bravo19/React/tic-tac-toe2/src/User.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Box from './Box.js';\n\nclass User extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      let count = this.state.count;\n\n      if (count % 2 !== 0) {\n        let newCount = count + 1;\n        this.setState({\n          count: newCount\n        });\n        return React.createElement(Box, {\n          value: \"X\",\n          index: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        });\n      } else {\n        let newCount = count + 1;\n        this.setState({\n          count: newCount\n        });\n        return React.createElement(Box, {\n          value: \"O\",\n          index: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.state = {\n      board: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      count: 1\n    };\n  } // handleOddClick = () => {\n  // let { userInput } = this.state\n  // this.setState({userInput: \"X\"})\n  // }\n  // handleEvenClick = () => {\n  //   let { userInput } = this.state\n  //   this.setState({userInput: \"O\"})\n  // }\n\n\n  render() {\n    let board = this.state.board;\n    let gameBoard = board.map((value, index) => {\n      return React.createElement(Box, {\n        value: value,\n        index: index,\n        handleClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, gameBoard);\n  }\n\n}\n\nexport default User;","map":{"version":3,"sources":["/Users/Matt/Desktop/Bravo19/React/tic-tac-toe2/src/User.js"],"names":["React","Component","Box","User","constructor","props","handleClick","count","state","newCount","setState","index","board","render","gameBoard","map","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,UAAhB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAC3BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAelBC,WAfkB,GAeJ,MAAM;AAAA,UACZC,KADY,GACF,KAAKC,KADH,CACZD,KADY;;AAElB,UAAIA,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAoB;AAClB,YAAIE,QAAQ,GAAGF,KAAK,GAAG,CAAvB;AACA,aAAKG,QAAL,CAAc;AAACH,UAAAA,KAAK,EAAEE;AAAR,SAAd;AACA,eAAO,oBAAC,GAAD;AAAK,UAAA,KAAK,EAAC,GAAX;AAAe,UAAA,KAAK,EAAEE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAJD,MAIO;AACL,YAAIF,QAAQ,GAAGF,KAAK,GAAG,CAAvB;AACA,aAAKG,QAAL,CAAc;AAACH,UAAAA,KAAK,EAAEE;AAAR,SAAd;AACA,eAAO,oBAAC,GAAD;AAAK,UAAA,KAAK,EAAC,GAAX;AAAe,UAAA,KAAK,EAAEE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KA1BiB;;AAEd,SAAKH,KAAL,GAAa;AACXI,MAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CADI;AAEXL,MAAAA,KAAK,EAAE;AAFI,KAAb;AAIH,GAP0B,CAQ3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAcAM,EAAAA,MAAM,GAAE;AAAA,QACAD,KADA,GACU,KAAKJ,KADf,CACAI,KADA;AAEN,QAAIE,SAAS,GAAGF,KAAK,CAACG,GAAN,CAAU,CAACC,KAAD,EAAQL,KAAR,KAAkB;AAC1C,aACE,oBAAC,GAAD;AACE,QAAA,KAAK,EAAEK,KADT;AAEE,QAAA,KAAK,EAAEL,KAFT;AAGE,QAAA,WAAW,EAAE,KAAKL,WAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KARe,CAAhB;AASA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGQ,SADH,CADF;AAKD;;AA7C0B;;AAgD7B,eAAeX,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Box from './Box.js'\n\nclass User extends Component {\n  constructor(props){\n    super(props)\n      this.state = {\n        board: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n        count: 1,\n      }\n  }\n  // handleOddClick = () => {\n  // let { userInput } = this.state\n  // this.setState({userInput: \"X\"})\n  // }\n  // handleEvenClick = () => {\n  //   let { userInput } = this.state\n  //   this.setState({userInput: \"O\"})\n  // }\n  handleClick = () => {\n    let { count } = this.state\n    if (count % 2 !== 0){\n      let newCount = count + 1\n      this.setState({count: newCount})\n      return <Box value=\"X\" index={index} />\n    } else {\n      let newCount = count + 1\n      this.setState({count: newCount})\n      return <Box value=\"O\" index={index} />\n    }\n  }\n\n  render(){\n    let { board } = this.state\n    let gameBoard = board.map((value, index) => {\n      return (\n        <Box\n          value={value}\n          index={index}\n          handleClick={this.handleClick}\n        />\n      )\n    })\n    return (\n      <div className=\"App\">\n        {gameBoard}\n      </div>\n    )\n  }\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}