{"ast":null,"code":"import _slicedToArray from \"/Users/Matt/Desktop/Bravo19/React/tic-tac-toe2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Matt/Desktop/Bravo19/React/tic-tac-toe2/src/Box.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass Box extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      const _this$props = this.props,\n            value = _this$props.value,\n            user = _this$props.user,\n            handleUser = _this$props.handleUser;\n      handleUser();\n\n      if (value !== \"X\" && value !== \"O\") {\n        this.setState({\n          value: user\n        });\n      }\n\n      this.checkWinner();\n    };\n\n    this.checkWinner = () => {\n      const _this$state = this.state,\n            value = _this$state.value,\n            index = _this$state.index,\n            gameBoard = _this$state.gameBoard;\n      const wins = [[0, 1, 2], [0, 3, 6], [0, 4, 8], [1, 4, 7], [2, 5, 8], [3, 4, 5], [6, 7, 8], [2, 4, 6]];\n      wins.forEach(win => {\n        const _win = _slicedToArray(win, 3),\n              a = _win[0],\n              b = _win[1],\n              c = _win[2];\n\n        if (gameBoard[a] && gameBoard[a] === gameBoard[b] && gameBoard[a] === gameBoard[c]) {\n          alert(\"\".concat(value, \" is the winner!\"));\n        }\n      });\n    };\n\n    this.state = {\n      value: this.props.value,\n      index: this.props.index,\n      board: this.props.board\n    };\n  }\n\n  // const { value, index } = this.state\n  // const { gameBoard } = this.props\n  // if (gameBoard[0] === gameBoard[1] && gameBoard[1] === gameBoard[2]){\n  //   alert(`${value} is the winner!`)\n  // } else if (gameBoard[0] === gameBoard[3] && gameBoard[3] === gameBoard[6]) {\n  //   alert(`${value} is the winner!`)\n  // } else if (gameBoard[0] === gameBoard[4] && gameBoard[4] === gameBoard[8]) {\n  //   alert(`${value} is the winner!`)\n  // }\n  render() {\n    const value = this.state.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"mainBox\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, value));\n  }\n\n}\n\nexport default Box;","map":{"version":3,"sources":["/Users/Matt/Desktop/Bravo19/React/tic-tac-toe2/src/Box.js"],"names":["React","Component","Box","constructor","props","handleClick","value","user","handleUser","setState","checkWinner","state","index","gameBoard","wins","forEach","win","a","b","c","alert","board","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SASlBC,WATkB,GASJ,MAAM;AAAA,0BACkB,KAAKD,KADvB;AAAA,YACVE,KADU,eACVA,KADU;AAAA,YACHC,IADG,eACHA,IADG;AAAA,YACGC,UADH,eACGA,UADH;AAElBA,MAAAA,UAAU;;AACV,UAAIF,KAAK,KAAK,GAAV,IAAiBA,KAAK,KAAK,GAA/B,EAAmC;AACjC,aAAKG,QAAL,CAAc;AAACH,UAAAA,KAAK,EAAEC;AAAR,SAAd;AACD;;AACD,WAAKG,WAAL;AACD,KAhBiB;;AAAA,SAsClBA,WAtCkB,GAsCJ,MAAM;AAAA,0BACkB,KAAKC,KADvB;AAAA,YACVL,KADU,eACVA,KADU;AAAA,YACHM,KADG,eACHA,KADG;AAAA,YACIC,SADJ,eACIA,SADJ;AAElB,YAAMC,IAAI,GAAG,CACX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADW,EAEX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFW,EAGX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHW,EAIX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJW,EAKX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALW,EAMX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANW,EAOX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPW,EAQX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARW,CAAb;AAUAA,MAAAA,IAAI,CAACC,OAAL,CAAaC,GAAG,IAAE;AAAA,oCACEA,GADF;AAAA,cACTC,CADS;AAAA,cACNC,CADM;AAAA,cACHC,CADG;;AAEhB,YAAIN,SAAS,CAACI,CAAD,CAAT,IAAgBJ,SAAS,CAACI,CAAD,CAAT,KAAiBJ,SAAS,CAACK,CAAD,CAA1C,IAAiDL,SAAS,CAACI,CAAD,CAAT,KAAiBJ,SAAS,CAACM,CAAD,CAA/E,EAAmF;AACjFC,UAAAA,KAAK,WAAId,KAAJ,qBAAL;AACD;AACF,OALD;AAMD,KAxDiB;;AAEhB,SAAKK,KAAL,GAAa;AACXL,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KADP;AAEXM,MAAAA,KAAK,EAAE,KAAKR,KAAL,CAAWQ,KAFP;AAGXS,MAAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWiB;AAHP,KAAb;AAKD;;AAoDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAE;AAAA,UACEhB,KADF,GACY,KAAKK,KADjB,CACEL,KADF;AAEN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,OAAO,EAAE,KAAKD,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,KADH,CADF,CADF;AAOD;;AA/EyB;;AAkF5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass Box extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      value: this.props.value,\n      index: this.props.index,\n      board: this.props.board,\n    }\n  }\n\n  handleClick = () => {\n    const { value, user, handleUser } = this.props\n    handleUser()\n    if (value !== \"X\" && value !== \"O\"){\n      this.setState({value: user})\n    }\n    this.checkWinner()\n  }\n\n  // handleWin = () => {\n  //   const { value, index } = this.props\n  //   const wins = [\n  //     [0, 1, 2],\n  //     [0, 3, 6],\n  //     [0, 4, 8],\n  //     [1, 4, 7],\n  //     [2, 5, 8],\n  //     [3, 4, 5],\n  //     [6, 7, 8],\n  //     [2, 4, 6]\n  //   ]\n  //   return wins.map(win=>{\n  //     const [a, b, c] = win\n  //     if (index === a && index === b && index === c && value === \"X\"){\n  //       return value\n  //     }\n  //   })\n  // }\n\n  checkWinner = () => {\n    const { value, index, gameBoard } = this.state\n    const wins = [\n      [0, 1, 2],\n      [0, 3, 6],\n      [0, 4, 8],\n      [1, 4, 7],\n      [2, 5, 8],\n      [3, 4, 5],\n      [6, 7, 8],\n      [2, 4, 6]\n    ]\n    wins.forEach(win=>{\n      const [a, b, c] = win\n      if (gameBoard[a] && gameBoard[a] === gameBoard[b] && gameBoard[a] === gameBoard[c]){\n        alert(`${value} is the winner!`)\n      }\n    })\n  }\n\n\n  // const { value, index } = this.state\n  // const { gameBoard } = this.props\n  // if (gameBoard[0] === gameBoard[1] && gameBoard[1] === gameBoard[2]){\n  //   alert(`${value} is the winner!`)\n  // } else if (gameBoard[0] === gameBoard[3] && gameBoard[3] === gameBoard[6]) {\n  //   alert(`${value} is the winner!`)\n  // } else if (gameBoard[0] === gameBoard[4] && gameBoard[4] === gameBoard[8]) {\n  //   alert(`${value} is the winner!`)\n  // }\n\n  render(){\n    const { value } = this.state\n    return (\n      <div>\n        <div id=\"mainBox\" onClick={this.handleClick}>\n          {value}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Box;\n"]},"metadata":{},"sourceType":"module"}